// Create Date:    2017.01.25
// Edited:         2020.07.31
// Design Name:    data memory
// Module Name:    data_mem
// use as-is in your ISA design
module data_mem(
  input              CLK,
  input [7:0]        DataAddress,    // address pointer, typically from ALU, LUT, or reg_file
  input              WriteEnMem,	 // usually enable write to memory for store commands only
  input [7:0]        DataIn,		 // data value to be stored, typically from ALU, LUT, or reg_file 
  output logic[7:0]  DataOut);		 // generally used for load commands

  logic [7:0] core [256];            // memory core

  always_comb			             // reads are combinational
    DataOut = core[DataAddress];	 // read is always active, so no read_enable needed

  always_ff @ (posedge CLK)			 // writes are sequential
    if(WriteEnMem) 					 //	  and occur only on rising clock for which WriteEnMem = 1
      core[DataAddress] <= DataIn;

endmodule
