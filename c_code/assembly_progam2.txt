// decrypter

setup:
  is  0      
  fog r3        // r3 = 0 loop counter
  is  10       
  fog r4        // r4 = 10 max loop itr
  is  64        
  fog r5        // r5 = 64 start of memory for encrypted message

// finding tap_pattern
start_new_state:
  // r5 will be for curr state char
  // r6 will be for the state char after

  // for looping
  is  1         
  fog r15       // r15 = 1
  fgo r3   r1    // r1 = r3 (loop counter) 
  fgo r15  r2   // r2 = r15 = 1
  add r3        // r3 = r3 + 1  
  fgo r3   r1    // r1 = r3
  fgo r4   r2    // r2 = r4
  slt r14       // r14 = 1 if r1 < r2, 0 otherwise
  fgo r14  r1   // r1 = r14
  fgo r15  r2   // r2 = 1
  is  // value here defined by how many instructions for assembly
  fog r13       // r13 = # of instructions since start of loop
  beq r13